functions:
# Roles
  get-roles:
    handler: handlers/rolesPermissionsHandlers.getRoles
    events:
      - httpApi:
          path: /roles
          method: get
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  create-role:
    handler: handlers/rolesPermissionsHandlers.createRole
    events:
      - httpApi:
          path: /role
          method: post
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  update-role:
    handler: handlers/rolesPermissionsHandlers.updateRole
    events:
      - httpApi:
          path: /role/{id}
          method: put
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  delete-role:
    handler: handlers/rolesPermissionsHandlers.deleteRole
    events:
      - httpApi:
          path: /role/{id}
          method: delete
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

#Permissions
  get-permissions:
    handler: handlers/rolesPermissionsHandlers.getPermissions
    events:
      - httpApi:
          path: /permissions
          method: get
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  create-permission:
    handler: handlers/rolesPermissionsHandlers.createPermission
    events:
      - httpApi:
          path: /permission
          method: post
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  update-permission:
    handler: handlers/rolesPermissionsHandlers.updatePermission
    events:
      - httpApi:
          path: /permission/{id}
          method: put
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  delete-permissions:
    handler: handlers/rolesPermissionsHandlers.deletePermission
    events:
      - httpApi:
          path: /permission/{id}
          method: delete
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  assign-permissions-to-role:
    handler: handlers/rolesPermissionsHandlers.assignPermissionsToRole
    events:
      - httpApi:
          path: /role/{id}/permissions
          method: post
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}

  get-role-with-permissions:
    handler: handlers/rolesPermissionsHandlers.getRoleWithPermissions
    events:
      - httpApi:
          path: /role/{id}/permissions
          method: get
          authorizer:
            type: jwt
            id: ${cf:core-service-${self:provider.stage}.EsenciaAuthorizerId}
